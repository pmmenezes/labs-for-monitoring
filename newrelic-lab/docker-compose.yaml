version: '3.8'

services:
  app:
    build: ./app
    container_name: newrelic-app
    ports:
      - "3000:3000"
    environment:
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=Lab-NodeJS-App
      - DATABASE_URL=postgresql://labuser:labpass@postgres:5432/labdb
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    container_name: newrelic-postgres
    environment:
      - POSTGRES_DB=labdb
      - POSTGRES_USER=labuser
      - POSTGRES_PASSWORD=labpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U labuser -d labdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: newrelic-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  nginx:
    build: ./nginx
    container_name: newrelic-nginx
    ports:
      - "80:80"
    depends_on:
      - app
    restart: unless-stopped

  # K6 para testes de carga
  k6:
    image: grafana/k6:latest
    container_name: newrelic-k6
    volumes:
      - ./k6:/scripts
    environment:
      - K6_OUT=json=/tmp/k6-results.json
    depends_on:
      - nginx
    profiles:
      - testing
    networks:
      - default

volumes:
  postgres_data: